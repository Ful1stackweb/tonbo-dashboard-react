import React, { useState } from 'react';

const InspectSensitivityTest = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [formData, setFormData] = useState({
    date: '',
    whoTestedSensor: '',
    sensorType: '',
    searchSLNo: ''
  });

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({
      ...formData,
      [name]: value
    });
  };

  const updateStatusCount = (e) => {
    const selectElement = e.target;
    const passCountElement = document.getElementById('pass-count');
    const failCountElement = document.getElementById('fail-count');

    let passCount = parseInt(passCountElement.textContent.split('-')[1], 10);
    let failCount = parseInt(failCountElement.textContent.split('-')[1], 10);

    const previousStatus = selectElement.getAttribute('data-previous-status');
    const newStatus = selectElement.value;

    if (previousStatus === 'pass') {
      passCount--;
    } else if (previousStatus === 'fail') {
      failCount--;
    }

    if (newStatus === 'pass') {
      passCount++;
    } else if (newStatus === 'fail') {
      failCount++;
    }

    passCountElement.textContent = 'P-' + passCount;
    failCountElement.textContent = 'F-' + failCount;

    selectElement.setAttribute('data-previous-status', newStatus);
  };

  const searchTable = () => {
    const input = searchTerm.toUpperCase();
    const table = document.querySelector('.table tbody');
    const rows = table.getElementsByTagName('tr');

    for (let i = 0; i < rows.length; i++) {
      const td = rows[i].getElementsByTagName('td')[1];
      if (td) {
        const txtValue = td.textContent || td.innerText;
        if (txtValue.toUpperCase().indexOf(input) > -1) {
          rows[i].style.display = '';
        } else {
          rows[i].style.display = 'none';
        }
      }
    }
  };

  return (
    <div id="data2" className="p-4 bg-gray-100">
      <h2 className="text-2xl font-bold mb-4">Inspect & Sensitivity Test</h2>
      <div className="container mx-auto bg-white p-6 rounded-lg shadow-lg">
        <form>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="form-group">
              <label htmlFor="date" className="block text-gray-700">Date</label>
              <input
                type="date"
                id="date"
                name="date"
                className="form-control mt-1 block w-full border-gray-300 rounded-md shadow-sm"
                value={formData.date}
                onChange={handleInputChange}
              />
            </div>
            <div className="form-group">
              <label htmlFor="whoTestedSensor" className="block text-gray-700">Who tested Sensor</label>
              <select
                id="whoTestedSensor"
                name="whoTestedSensor"
                className="form-control mt-1 block w-full border-gray-300 rounded-md shadow-sm"
                value={formData.whoTestedSensor}
                onChange={handleInputChange}
              >
                <option value="">Select</option>
                <option value="option1">Option 1</option>
                <option value="option2">Option 2</option>
                <option value="option3">Option 3</option>
              </select>
            </div>
          </div>
          <div className="form-group mt-4">
            <label htmlFor="sensorType" className="block text-gray-700">Type of Sensor</label>
            <select
              id="sensorType"
              name="sensorType"
              className="form-control mt-1 block w-full border-gray-300 rounded-md shadow-sm"
              value={formData.sensorType}
              onChange={handleInputChange}
            >
              <option value="">Select Sensor Type</option>
              <option value="option1">Option 1</option>
              <option value="option2">Option 2</option>
              <option value="option3">Option 3</option>
            </select>
          </div>
          <div className="form-group mt-4">
            <label htmlFor="searchSLNo" className="block text-gray-700">Search SL.No</label>
            <div className="relative">
              <input
                type="text"
                id="searchSLNo"
                name="searchSLNo"
                className="form-control mt-1 block w-full border-gray-300 rounded-md shadow-sm"
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                onKeyUp={searchTable}
              />
              <span className="absolute right-3 top-2">
                <img src="/img/search.png" alt="Search" className="h-5 w-5" />
              </span>
            </div>
          </div>
        </form>
        <table className="table-auto w-full mt-6 border-collapse">
          <thead>
            <tr>
              <th className="border py-2 px-4">Select</th>
              <th className="border py-2 px-4">TI SL.No</th>
              <th className="border py-2 px-4">Status</th>
              <th className="border py-2 px-4">Sensitivity Check List</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td className="border text-center">
                <input type="checkbox" />
              </td>
              <td className="border text-center">TUV-9008555</td>
              <td className="border text-center">
                <select
                  className="status-dropdown mt-1 block w-full border-gray-300 rounded-md shadow-sm"
                  onChange={updateStatusCount}
                  data-previous-status=""
                >
                  <option value="">Select</option>
                  <option value="pass" className="status-pass">Pass</option>
                  <option value="fail" className="status-fail">Fail</option>
                </select>
              </td>
              <td className="border text-center">
                <div className="checklist flex flex-wrap justify-center">
                  <label className="mr-2"><input type="checkbox" /> criteria 1</label>
                  <label className="mr-2"><input type="checkbox" /> criteria 2</label>
                  <label className="mr-2"><input type="checkbox" /> criteria 3</label>
                  <label className="mr-2"><input type="checkbox" /> criteria 4</label>
                  <label className="mr-2"><input type="checkbox" /> criteria 5</label>
                </div>
              </td>
            </tr>
            {/* More rows can go here */}
          </tbody>
        </table>
        <div className="footer flex justify-end mt-6">
          <button className="save-button bg-green-500 text-white py-2 px-4 rounded-md shadow-sm hover:bg-green-600">SAVE</button>
        </div>
      </div>
    </div>
  );
};

export default InspectSensitivityTest;
